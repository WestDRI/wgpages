# If you are running an Ubuntu VM:

sudo apt-get update
sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io
sudo docker run hello-world




# If you want to re-use yesterday's CentOS VMs:

sudo yum install -y yum-utils
sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
sudo yum install wget docker-ce docker-ce-cli containerd.io 
sudo systemctl start docker
sudo docker run hello-world





====
sudo docker images

sudo docker search centos

sudo docker pull centos

sudo docker run -it --name First_Centos centos

cat /etc/redhat-release


======

mkdir ~/input

sudo docker run -it --name gnuPlotExample -v ~/input:/workdir centos

yum install gnuplot

cd /workdir

wget https://wgschool.netlify.app/docker/pm3d_lighting.2.gnu

gnuplot /workdir/pm3d_lighting.2.gnu

exit

View ~/input/pm3d_lighting.2.png using MobaXterm


=====

nano Dockerfile

#CentOS GNUPlot
FROM centos

VOLUME /workdir
WORKDIR /workdir

RUN yum install gnuplot -y
ENTRYPOINT ["gnuplot"]

sudo docker build -t gnuplot_centos .

rm ~/input/pm3d_lighting.2.png

sudo docker run --name DockerGNUPlot -v ~/input:/workdir gnuplot_centos pm3d_lighting.2.gnu

ls ~/input

sudo docker image save -o gnuplotCentosDemo.tar gnuplotcentos

sudo docker image import gnuplotCentosDemo.tar importedgnuplot

sudo docker image list
